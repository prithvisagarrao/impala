// Autogenerated by Thrift Compiler (0.9.3)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package fb303

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

//Common status reporting mechanism across all services
type FbStatus int64

const (
	FbStatus_DEAD     FbStatus = 0
	FbStatus_STARTING FbStatus = 1
	FbStatus_ALIVE    FbStatus = 2
	FbStatus_STOPPING FbStatus = 3
	FbStatus_STOPPED  FbStatus = 4
	FbStatus_WARNING  FbStatus = 5
)

func (p FbStatus) String() string {
	switch p {
	case FbStatus_DEAD:
		return "DEAD"
	case FbStatus_STARTING:
		return "STARTING"
	case FbStatus_ALIVE:
		return "ALIVE"
	case FbStatus_STOPPING:
		return "STOPPING"
	case FbStatus_STOPPED:
		return "STOPPED"
	case FbStatus_WARNING:
		return "WARNING"
	}
	return "<UNSET>"
}

func FbStatusFromString(s string) (FbStatus, error) {
	switch s {
	case "DEAD":
		return FbStatus_DEAD, nil
	case "STARTING":
		return FbStatus_STARTING, nil
	case "ALIVE":
		return FbStatus_ALIVE, nil
	case "STOPPING":
		return FbStatus_STOPPING, nil
	case "STOPPED":
		return FbStatus_STOPPED, nil
	case "WARNING":
		return FbStatus_WARNING, nil
	}
	return FbStatus(0), fmt.Errorf("not a valid FbStatus string")
}

func FbStatusPtr(v FbStatus) *FbStatus { return &v }

func (p FbStatus) MarshalText() ([]byte, error) {
	return []byte(p.String()), nil
}

func (p *FbStatus) UnmarshalText(text []byte) error {
	q, err := FbStatusFromString(string(text))
	if err != nil {
		return err
	}
	*p = q
	return nil
}
